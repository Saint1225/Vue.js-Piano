#app
  .audioplay(v-for=" s in sounddata")
    //- label {{s.number}}
    audio(v-bind:data-num="s.number")
      source(v-bind:src="s.url" type="audio/ogg")
  .center_box
    h2 Vue.js Piano Project
    .keyboard
      .pianokey(v-for="s in display_keys")
        .white(v-if="s.type==\'white\'"
               v-on:click="addnote(s.num)"
               v-bind:class="get_current_highlight(s.num,s.key)?\"playing\":\"\"")
          label {{String.fromCharCode(s.key)}}
        .black(v-if="s.type==\'black\'"
               v-on:click="addnote(s.num)"
               v-bind:class="get_current_highlight(s.num,s.key)? \"playing\":\"\"")
          label {{String.fromCharCode(s.key)}}
    br
    .control
      ul.notes_list(v-if="notes.length>0")
        li(v-for="(note,id) in notes"
           v-bind:class="now_note_id-1==id? \"playing\":\"\"")
          .num {{note.num}}
          .time {{note.time}}
      button(v-on:click="load_sample") Sample (Dodoro)
      button(v-on:click="playnext(0.7)") Play next
      button(v-on:click="startplay" v-if="playing_time <= 0") Start play
        i.fa.fa-play
      button(v-on:click="stopplay" v-if="playing_time >=1") Stop play
        i.fa.fa-pause
      button(v-on:click="startrecord" v-if="record_time<=0") Record
        i.fa.fa-circle
      button(v-on:click="stoprecord" v-if="record_time>=1") Stop record
        i.fa.fa-stop
      button(v-on:click="notes=[]") Clear
      h3 {{playing_time+record_time}}